<!DOCTYPE html>
<html lang="$lang" dir="$layout_direction">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    #if($title)
        <title>$title</title>
    #else
        #if($isUpdate)
            <title>Update $singularName</title>
        #else
            <title>Add a new $singularName</title>
        #end
    #end
    <link href="/static/css/admin_panel_upsert.css" rel="stylesheet">
    <link href="/static/css/admin_panel_no_sql_upsert.css" rel="stylesheet">
    <link href="/static/css/common_style.css" rel="stylesheet">
    #if($tinyMCEConfig)
        <script src="https://cdnjs.cloudflare.com/ajax/libs/tinymce/6.7.1/tinymce.min.js"></script>
    #end
    <link rel="icon" type="image/x-icon" href="/static/images/favicon.ico">
</head>

<body>
<div id="container">
    <div id="header">
        <div class="left-content">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                 class="menu">
                <path d="M3 7H21" stroke="#292D32" stroke-width="1.5" stroke-linecap="round"/>
                <path d="M3 12H21" stroke="#292D32" stroke-width="1.5" stroke-linecap="round"/>
                <path d="M3 17H21" stroke="#292D32" stroke-width="1.5" stroke-linecap="round"/>
            </svg>
            <h2 class="title"><span class="istok-web-black">Ktor</span>Admin</h2>
        </div>
        <div id="search-container"></div>
        <div id="username-container">
            <div id="username-box">
                <h4 class="username">$!username</h4>
                <div class="dropdown-icon">
                    <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path
                                d="M11.6199 5.22083L7.81655 9.02417C7.36738 9.47333 6.63238 9.47333 6.18322 9.02417L2.37988 5.22083"
                                stroke="#292D32" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round"
                                stroke-linejoin="round"/>
                    </svg>
                </div>
            </div>
            <div class="dropdown-content">
                #foreach($menu in $menus)
                    <button><a href="$menu.link">$menu.title</a></button>
                #end
                <button onclick="changeTheme()">$translations['change_theme']</button>
                #if($translators)
                    <div class="submenu-container">
                        <button class="submenu-button">$translations['languages']</button>
                        <div class="submenu">
                            #foreach($translator in $translators)
                                <button onclick="changeLanguage('$translator.languageCode')"
                                        class="#if($current_lang == $translator.languageCode) selected_lang #end">$translator.languageName</button>
                            #end
                        </div>
                    </div>
                #end
                #if($canDownload)
                    <button onclick="downloadFile('$pluralName', '$csrfToken', '$primaryKey')">$translations[
                        'download_as_pdf']</button>
                #end
                #if($hasAuthenticate)
                    <button onclick="logout()" id="logout">$translations['logout']</button>
                #end
            </div>
        </div>
    </div>
    <div id="union-box">
        <div id="top-box-row-up">
            #if($title)
                <h1 id="name" class="istok-web-bold">$title</h1>
            #else
                #if($isUpdate)
                    <h1 id="name" class="istok-web-bold">Update $singularName</h1>
                #else
                    <h1 id="name" class="istok-web-bold">Add a new $singularName</h1>
                #end
            #end
        </div>
        <div id="bottom-box">
            #macro(renderField $field $parentName)
                #if($parentName && $parentName != "")
                    #set($fullFieldName = $parentName + "." + $field.fieldName)
                #else
                    #set($fullFieldName = $field.fieldName)
                #end

                #if($!values.get($fullFieldName))
                    #set($defaultValue = $values.get($fullFieldName))
                #elseif ($field.defaultValue)
                    #set($defaultValue = $field.defaultValue)
                #else
                    #set($defaultValue = "")
                #end

                #if($field.type.name == "LIST" || $field.type.name == "MAP")
                    <fieldset
                            class="field-section ${field.type.name.toLowerCase()}-section multi-section custom-section"
                            data-field="$fullFieldName"
                            data-type="$field.type.name"
                        #if($field.type.name ==
                            "MAP" && $field.type.fields.size() == 1 && !$field.type.fields.get(0).fieldName)
                            data-value-type="$field.type.fields.get(0).type.name"
                        #end>
                        <h3 class="section-title">$field.fieldName</h3>

                        #if($field.type.name ==
                            "MAP" && $field.type.fields.size() == 1 && !$field.type.fields.get(0).fieldName)
                            <div class="key-value-container multi-section">
                                <div class="key-value-entry" data-template="true" style="display: none;">
                                    <div class="key-value-pair">
                                        <div class="key-field">
                                            <label>Key</label>
                                            <input type="text" class="form-input" name="${fullFieldName}[_INDEX_].key"
                                                   value="$!defaultValue"/>
                                        </div>
                                        <div class="value-field">
                                            <label>Value</label>
                                            #set($valueType = $field.type.fields.get(0).type)
                                            #if($valueType.name == "STRING")
                                                <input type="text" class="form-input"
                                                       name="${fullFieldName}[_INDEX_].value"
                                                       value="$!defaultValue"/>
                                            #elseif($valueType.name == "NUMBER")
                                                <input type="number" class="form-input"
                                                       name="${fullFieldName}[_INDEX_].value"
                                                       value="$!defaultValue"/>
                                            #elseif($valueType.name == "BOOLEAN")
                                                <input type="checkbox" class="checkbox-input"
                                                       name="${fullFieldName}[_INDEX_].value"
                                                       #if($!defaultValue == "true")checked#end/>
                                            #else
                                                <input type="text" class="form-input"
                                                       name="${fullFieldName}[_INDEX_].value"
                                                       value="$!defaultValue"/>
                                            #end
                                        </div>
                                        <button type="button" class="remove-entry-btn" onclick="removeEntry(this)">
                                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                                 xmlns="http://www.w3.org/2000/svg">
                                                <path d="M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z"
                                                      stroke="#292D32" stroke-width="1.5" stroke-linecap="round"
                                                      stroke-linejoin="round"/>
                                                <path d="M9.16998 14.83L14.83 9.17004" stroke="#292D32"
                                                      stroke-width="1.5" stroke-linecap="round"
                                                      stroke-linejoin="round"/>
                                                <path d="M14.83 14.83L9.16998 9.17004" stroke="#292D32"
                                                      stroke-width="1.5" stroke-linecap="round"
                                                      stroke-linejoin="round"/>
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                                <button type="button" class="add-entry-btn"
                                        onclick="addKeyValueEntry('${fullFieldName}')">Add New Entry
                                </button>
                            </div>
                        #elseif($field.type.name == "LIST")
                            <div class="list-container">
                                <div class="list-entry" data-template="true" style="display: none;">
                                    <div class="nested-fields-container">
                                        #foreach($nestedField in $field.type.fields)
                                            #if($field.type.fields.size() == 1 && !$nestedField.fieldName)
                                                #set($nestedFieldName = "${fullFieldName}[_INDEX_]")
                                            #else
                                                #set($nestedFieldName = "${fullFieldName}[_INDEX_]")
                                            #end
                                            #renderField($nestedField $nestedFieldName)
                                        #end
                                    </div>
                                    <button type="button" class="remove-entry-btn" onclick="removeEntry(this)">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                             xmlns="http://www.w3.org/2000/svg">
                                            <path d="M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z"
                                                  stroke="#292D32" stroke-width="1.5" stroke-linecap="round"
                                                  stroke-linejoin="round"/>
                                            <path d="M9.16998 14.83L14.83 9.17004" stroke="#292D32" stroke-width="1.5"
                                                  stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M14.83 14.83L9.16998 9.17004" stroke="#292D32" stroke-width="1.5"
                                                  stroke-linecap="round" stroke-linejoin="round"/>
                                        </svg>
                                    </button>
                                </div>
                                <button type="button" class="add-entry-btn"
                                        onclick="addListEntry(this)"
                                        data-field-name="$fullFieldName">Add New Entry
                                </button>
                            </div>
                        #else
                            <div class="nested-fields-container">
                                #foreach($nestedField in $field.type.fields)
                                    #renderField($nestedField $fullFieldName)
                                #end
                            </div>
                        #end
                    </fieldset>
                #else
                    <div class="sidebar-input-wrapper">
                        #if($field.type.name != "BOOLEAN")
                            <label class="item-label">$field.verboseName</label>
                        #end

                        #if($field.hasConfirmation and $isUpdate)
                            #if($defaultValue)
                                <p class="confirmation-value">Current value: $!defaultValue</p>
                            #end
                            #set($reset_text = $translations.get('reset_item').replace("{name}", $field.verboseName))
                            <button type="button" class="confirmation-button"
                                    onclick="goToConfigurationEditUrl('$field.fieldName')">$reset_text</button>
                        #elseif($field.type.name == "STRING")
                            #if($field.hasRichEditor)
                                <textarea name="$fullFieldName" class="rich-editor-area"
                                          #if($field.readOnly)readonly#end>$!defaultValue</textarea>
                            #elseif($field.hasTextArea)
                                <textarea name="$field.fieldName" class="simple-editor-area"
                                          #if($field.readOnly)readonly#end>$!defaultValue</textarea>
                            #else
                                <input type="text" class="form-input" name="$fullFieldName"
                                       value="$!defaultValue"
                                       #if($field.readOnly)readonly#end/>
                            #end
                        #elseif($field.type.name == "FILE")
                            <label for="$fullFieldName"
                                   class="file-input#if($field.readOnly) readonly-field#end">$translations[
                                'select_file']</label>
                            <input type="file" class="file-input-field" name="$fullFieldName"
                                   id="$fullFieldName"
                                   #if($field.readOnly)disabled#end/>
                            <p class="selected-file-label" id="selected-file-$fullFieldName"></p>
                            #if($!values.get($fullFieldName))
                                <button class="file-link" type="button"
                                        onclick="openFileLink('$!values.get($fullFieldName)')">
                                    $translations['current_file']
                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none"
                                         xmlns="http://www.w3.org/2000/svg">
                                        <path d="M13 11L21.2 2.80005" stroke="#9A6C00" stroke-width="1.5"
                                              stroke-linecap="round" stroke-linejoin="round"/>
                                        <path d="M22 6.8V2H17.2" stroke="#9A6C00" stroke-width="1.5"
                                              stroke-linecap="round" stroke-linejoin="round"/>
                                        <path d="M11 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22H15C20 22 22 20 22 15V13"
                                              stroke="#9A6C00" stroke-width="1.5" stroke-linecap="round"
                                              stroke-linejoin="round"/>
                                    </svg>
                                </button>
                            #end
                        #elseif($field.type.name == "BOOLEAN")
                            <label class="custom-checkbox">
                                #if($field.nullable == false)
                                    <input type="hidden" name="$fullFieldName" value="off">
                                #end
                                <input type="checkbox" class="checkbox-input" name="$fullFieldName"
                                    #if($!defaultValue == "true" || $!defaultValue == "1" || $!defaultValue == "on")
                                       checked #end #if($field.readOnly) disabled #end>
                                <span class="checkmark">
                                    <svg width="11" height="8" class="checkmark-icon" viewBox="0 0 11 8" fill="none"
                                         xmlns="http://www.w3.org/2000/svg">
                                        <path d="M1 3.83L3.83 6.66L9.5 1" stroke="white" stroke-width="1.5"
                                              stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>
                                </span>
                                $field.verboseName
                            </label>
                        #elseif($field.type.name == "ENUMERATION")
                            <div class="select-input-background">
                                <select name="$fullFieldName" class="select-input"
                                        #if($field.readOnly)disabled#end>
                                    <option value="">$translations['select_item']</option>
                                    #foreach($value in $field.enumerationValues)
                                        <option value="$value"
                                                #if($value == $!defaultValue)selected#end>$value</option>
                                    #end
                                </select>
                            </div>
                        #else
                            <input type="$field.type.fieldType" class="form-input" name="$fullFieldName"
                                   value="$!defaultValue"
                                   #if($field.readOnly)readonly#end/>
                        #end

                        #if($!errors.get($fullFieldName))
                            <div class="error_message">
                                #foreach($error in $errors.get($fullFieldName).messages)
                                    $error<br/>
                                #end
                            </div>
                        #end
                    </div>
                    #set($previewItem = $previews[$field])
                    #if($previewItem)
                        $previewItem
                    #end
                #end
            #end

            <form method="post" #if($callMethod) enctype="$callMethod" #else enctype="multipart/form-data" #end
                  id="form-box">
                #foreach($field in $fields)
                    #renderField($field "")
                #end
                <input type="hidden" value="$csrfToken" name="_csrf">
                <input type="hidden" value="$requestId" name="requestId">
                <button id="submit-button" type="submit"  #if($hasAction == false) class="disabled" #end>$translations[
                    'submit']</button>
            </form>

            <script>
                function getNextIndex(container) {
                    const entries = container.querySelectorAll('.list-entry:not([data-template="true"]), .key-value-entry:not([data-template="true"])');
                    return entries.length;
                }

                function updateFieldNames(container) {
                    const entries = container.querySelectorAll('.list-entry:not([data-template="true"]), .key-value-entry:not([data-template="true"])');
                    entries.forEach((entry, index) => {
                        updateElementNames(entry, index);
                    });
                }

                function updateElementNames(element, index) {
                    element.querySelectorAll('input, select, textarea').forEach(input => {
                        const oldName = input.getAttribute('name');
                        const newName = oldName.replace(/\[_INDEX_\]|\[\d+\](?=\.|$|\[)/, `[${index}]`);
                        input.setAttribute('name', newName);
                    });

                    element.querySelectorAll('fieldset[data-field]').forEach(section => {
                        const oldFieldName = section.getAttribute('data-field');
                        const newFieldName = oldFieldName.replace(/\[_INDEX_\]|\[\d+\](?=\.|$|\[)/, `[${index}]`);
                        section.setAttribute('data-field', newFieldName);

                        const addButton = section.querySelector('.add-entry-btn');
                        if (addButton) {
                            addButton.setAttribute('data-field-name', newFieldName);
                        }
                    });
                }

                function createRemoveButton() {
                    const removeBtn = document.createElement('button');
                    removeBtn.type = 'button';
                    removeBtn.className = 'remove-entry-btn';
                    removeBtn.onclick = function () {
                        removeEntry(this);
                    };
                    removeBtn.innerHTML = `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z" stroke="#292D32" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M9.16998 14.83L14.83 9.17004" stroke="#292D32" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M14.83 14.83L9.16998 9.17004" stroke="#292D32" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
    `;
                    return removeBtn;
                }

                function addListEntry(button) {
                    const section = button.closest('fieldset');
                    const container = section.querySelector('.list-container');
                    const template = container.querySelector('.list-entry[data-template="true"]');
                    const newEntry = template.cloneNode(true);
                    const index = getNextIndex(container);

                    newEntry.removeAttribute('data-template');
                    newEntry.style.display = '';
                    clearEntryValues(newEntry);

                    // Replace all _INDEX_ placeholders with the actual index
                    function replaceIndexPlaceholders(element, idx) {
                        element.querySelectorAll('input, select, textarea, fieldset[data-field]').forEach(el => {
                            if (el.hasAttribute('name')) {
                                const name = el.getAttribute('name');
                                el.setAttribute('name', name.replace(/\[_INDEX_\]/g, `[${idx}]`));
                            }
                            if (el.hasAttribute('data-field')) {
                                const field = el.getAttribute('data-field');
                                el.setAttribute('data-field', field.replace(/\[_INDEX_\]/g, `[${idx}]`));
                            }
                        });

                        // Process nested fieldsets
                        element.querySelectorAll('fieldset[data-field]').forEach(fieldset => {
                            const addBtn = fieldset.querySelector('.add-entry-btn');
                            if (addBtn && addBtn.hasAttribute('data-field-name')) {
                                const fieldName = addBtn.getAttribute('data-field-name');
                                addBtn.setAttribute('data-field-name', fieldName.replace(/\[_INDEX_\]/g, `[${idx}]`));
                            }
                        });
                    }

                    replaceIndexPlaceholders(newEntry, index);

                    // Make sure the remove button is present and visible
                    let removeBtn = newEntry.querySelector('.remove-entry-btn');
                    if (!removeBtn) {
                        removeBtn = createRemoveButton();
                        newEntry.appendChild(removeBtn);
                    } else {
                        // Make sure the existing button is visible and functional
                        removeBtn.style.display = '';
                        removeBtn.onclick = function () {
                            removeEntry(this);
                        };
                    }

                    container.insertBefore(newEntry, button);
                    initializeNestedAddButtons(newEntry);
                }

                function addKeyValueEntry(fieldName) {
                    const section = document.querySelector(`fieldset[data-field="${fieldName}"]`);
                    if (!section) return;

                    const container = section.querySelector('.key-value-container');
                    if (!container) return;

                    const template = container.querySelector('.key-value-entry[data-template="true"]');
                    if (!template) return;

                    const newEntry = template.cloneNode(true);
                    if (!newEntry) return;

                    const index = getNextIndex(container);

                    newEntry.removeAttribute('data-template');
                    newEntry.style.display = '';
                    clearEntryValues(newEntry);

                    // Replace all _INDEX_ placeholders with the actual index
                    newEntry.querySelectorAll('input, select, textarea').forEach(input => {
                        const name = input.getAttribute('name');
                        if (name) {
                            input.setAttribute('name', name.replace(/\[_INDEX_\]/g, `[${index}]`));
                        }
                    });

                    // Make sure the remove button is present and visible
                    let removeBtn = newEntry.querySelector('.remove-entry-btn');
                    if (!removeBtn) {
                        removeBtn = createRemoveButton();
                        newEntry.appendChild(removeBtn);
                    } else {
                        // Make sure the existing button is visible and functional
                        removeBtn.style.display = '';
                        removeBtn.onclick = function () {
                            removeEntry(this);
                        };
                    }

                    // Insert before the add button
                    const addButton = container.querySelector('.add-entry-btn');
                    container.insertBefore(newEntry, addButton);
                }

                function removeEntry(button) {
                    const entry = button.closest('.list-entry, .key-value-entry');
                    const container = entry.parentElement;
                    entry.remove();
                    updateFieldNames(container);
                }

                function clearEntryValues(entry) {
                    entry.querySelectorAll('input, select, textarea').forEach(input => {
                        if (input.type === 'checkbox') {
                            input.checked = false;
                        } else {
                            input.value = '';
                        }
                    });
                }

                function initializeNestedAddButtons(container) {
                    container.querySelectorAll('.add-entry-btn').forEach(button => {
                        if (!button.closest('.key-value-container')) {  // Only handle list buttons here
                            button.onclick = function () {
                                addListEntry(this);
                            };
                        }
                    });
                }

                // Initialize all elements
                document.addEventListener('DOMContentLoaded', function () {
                    // Make sure all template elements are hidden
                    document.querySelectorAll('[data-template="true"]').forEach(el => {
                        el.style.display = 'none';
                    });

                    // Add event listeners to all "Add New Entry" buttons
                    document.querySelectorAll('.add-entry-btn').forEach(button => {
                        if (button.closest('.key-value-container')) {
                            const fieldName = button.closest('fieldset').getAttribute('data-field');
                            if (fieldName) {
                                button.onclick = function () {
                                    addKeyValueEntry(fieldName);
                                };
                            }
                        } else if (button.closest('.list-container')) {
                            button.onclick = function () {
                                addListEntry(this);
                            };
                        }
                    });
                });
            </script>
        </div>
    </div>
</div>
<div class="sidebar">
    <div id="menu-title-container">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" id="menu-expand-icon"
             xmlns="http://www.w3.org/2000/svg" onclick="expandOrShrinkSidebar()">
            <path
                    d="M21.97 15V9C21.97 4 19.97 2 14.97 2H8.96997C3.96997 2 1.96997 4 1.96997 9V15C1.96997 20 3.96997 22 8.96997 22H14.97C19.97 22 21.97 20 21.97 15Z"
                    stroke="#292D32" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M14.97 2V22" stroke="#292D32" stroke-width="1.5" stroke-linecap="round"
                  stroke-linejoin="round"/>
            <path d="M7.96997 9.43994L10.53 11.9999L7.96997 14.5599" stroke="#292D32" stroke-width="1.5"
                  stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        <h2 class="title"><span class="istok-web-black">Ktor</span>Admin</h2>
    </div>
    <h4 class="group-text"></h4>
    <button class="menu-item" onclick="openDashboard()">
        <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"
             class="menu-icon">
            <path
                    d="M12.75 7.5H14.25C15.75 7.5 16.5 6.75 16.5 5.25V3.75C16.5 2.25 15.75 1.5 14.25 1.5H12.75C11.25 1.5 10.5 2.25 10.5 3.75V5.25C10.5 6.75 11.25 7.5 12.75 7.5Z"
                    stroke="#292D32" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round"
                    stroke-linejoin="round"/>
            <path
                    d="M3.75 16.5H5.25C6.75 16.5 7.5 15.75 7.5 14.25V12.75C7.5 11.25 6.75 10.5 5.25 10.5H3.75C2.25 10.5 1.5 11.25 1.5 12.75V14.25C1.5 15.75 2.25 16.5 3.75 16.5Z"
                    stroke="#292D32" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round"
                    stroke-linejoin="round"/>
            <path
                    d="M4.5 7.5C6.15685 7.5 7.5 6.15685 7.5 4.5C7.5 2.84315 6.15685 1.5 4.5 1.5C2.84315 1.5 1.5 2.84315 1.5 4.5C1.5 6.15685 2.84315 7.5 4.5 7.5Z"
                    stroke="#292D32" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round"
                    stroke-linejoin="round"/>
            <path
                    d="M13.5 16.5C15.1569 16.5 16.5 15.1569 16.5 13.5C16.5 11.8431 15.1569 10.5 13.5 10.5C11.8431 10.5 10.5 11.8431 10.5 13.5C10.5 15.1569 11.8431 16.5 13.5 16.5Z"
                    stroke="#292D32" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round"
                    stroke-linejoin="round"/>
        </svg>
        $translations['dashboard']
    </button>
    #foreach($group in $panelGroups)
        <h4 class="group-text">$group.group</h4>
        #foreach($panel in $group.panels)
            #set($capitalizedPanel = $panel.pluralName.substring(0,1).toUpperCase() + $panel.pluralName.substring(1))
            <button class="menu-item #if($panel.pluralName == $currentPanel) selected #end"
                    onclick="openPanel('$panel.pluralName')">
                #if($panel.iconFile)
                    <div class="menu-icon"
                         style="-webkit-mask: url('$panel.iconFile') no-repeat center / contain; mask: url('$panel.iconFile') no-repeat center / contain;"></div>
                #end
                #if($panel.tableName)
                    #set($panelName = $panel.tableName)
                #else
                    #set($panelName = $panel.collectionName)
                #end
                <span class="sidebar-item-name">$capitalizedPanel</span> <span
                    class="sidebar-item-count">$!counts[$panelName]</span>
            </button>
        #end
    #end
</div>
<div id="loading">
    <div class="spinner"></div>
</div>
<script>
    const selectedFileText = "$translations['selected_file']"
    const adminPath = "$adminPath"
        #if($tinyMCEConfig)
        const tinyConfig = JSON.parse(`$tinyMCEConfig`);
        #end
    const computedColumns = [];
        #foreach($field in $fields)
            #if($field.computedField)
            computedColumns.push({
                columnName: "$field.fieldName",
                computedColumn: "$field.computedField"
            });
            #end
        #end
</script>
<script src="/static/js/common.js"></script>
<script src="/static/js/upsert_admin.js"></script>
</body>
</html>